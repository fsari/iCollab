@model iCollab.ViewModels.SearchViewModel<Model.Task>
@{
    ViewBag.Title = "Görevler";
}

@using PagedList.Mvc; 

<aside class="right-side">

    <section class="content-header">
        <h1>Görevler</h1>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header">
                        <div class="pull-right" style="margin:10px;"><label class="label label-info">@Model.TotalItemCount Görev</label></div>
                        
                        <div class="pull-right" style="margin: 4px;">
                            <form id="searchform" name="searchform" action="/Tasks/Search" method="POST" class="sidebar-form">
                                <div class="input-group">
                                    <input type="text" name="query" class="form-control" placeholder="Arama." />
                                    <span class="input-group-btn">
                                        <button type='submit' name='search' id='search-btn' class="btn btn-flat"><i class="fa fa-search"></i></button>
                                    </span>
                                </div>
                            </form>
                        </div>
                        
                        <div class="clearfix"></div>
                    </div>

                    @if (Model != null && Model.Results.Count > 0)
                    {
                        { Html.RenderPartial("_TaskTable", Model.Results); }
                    }
                    else
                    {
                        <div class="callout callout-info">
                            Herhangi bir görev yok. Yeni bir görev oluşturmak için :
                            @Html.ActionLink("Yeni görev", "CreateTask", "Tasks", null, new { @class = "btn btn-sm btn-primary" })
                        </div>
                    }

                    <div class="box-footer">
                        @Html.PagedListPager(Model.Results, page => Url.Action("NavigateSearch", "Tasks", new { query= Model.Query, page }))
                    </div>
                </div>
            </div>
        </div>
    </section>
</aside>



@{
    ViewBag.Title = "Gantt";
}

<aside class="right-side">

    <section class="content-header">
        <h1>Gantt</h1>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                     @(Html.Kendo().Gantt<iCollab.ViewModels.Gantt.GanttTaskViewModel, iCollab.ViewModels.Gantt.DependencyViewModel>()
                        .Name("Gantt")
                        .Columns(columns =>
                        { 
                            columns.Bound("title").Title("Başlık").Editable(true).Sortable(true);
                            columns.Bound("start").Title("Başlangıç").Format("{0:MM/dd/yyyy}").Width(100).Editable(true).Sortable(true);
                            columns.Bound("end").Title("Bitiş").Format("{0:MM/dd/yyyy}").Width(100).Editable(true).Sortable(true);
                        })
                        .Views(views =>
                        {
                            views.DayView();
                            views.WeekView(view => view.Selected(true));
                            views.MonthView();
                        })
                        .Height(800)
                        .ShowWorkHours(false)
                        .ShowWorkDays(false)
                        .Snap(false) 
                        .DataSource(ds => ds
                            .Read("Tasks", "Gantt")
                            .Create("CreateTask", "Gantt")
                            .Destroy("DestroyTask", "Gantt")
                            .Update("UpdateTask", "Gantt")
                            .Model(m =>
                            {
                                m.Id(f => f.TaskId);
                                m.ParentId(f => f.ParentId);
                                m.OrderId(f => f.OrderId);
                                m.Field(f => f.Expanded).DefaultValue(true);
                            })
                        )
                        .DependenciesDataSource(ds => ds
                            .Read("ReadDependencies", "Gantt")
                            .Create("CreateDependency", "Gantt")
                            .Destroy("DestroyDependency", "Gantt")
                            .Update("UpdateDependency", "Gantt")    
                            .Model(m =>
                            {
                                m.Id(f => f.Id);
                                m.PredecessorId(f => f.PredecessorId);
                                m.SuccessorId(f => f.SuccessorId);
                                m.Type(f => f.Type);
                            })
                        )
                    )
                </div>
            </div>
        </div>
    </section>
</aside>

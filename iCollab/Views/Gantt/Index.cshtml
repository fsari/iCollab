<aside class="right-side">

    <section class="content-header">
        <h1>Gantt</h1>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                     @(Html.Kendo().Gantt<iCollab.ViewModels.Gantt.GanttTaskViewModel, iCollab.ViewModels.Gantt.DependencyViewModel>()
                        .Name("Gantt")
                        .Columns(columns =>
                        {
                            columns.Bound("TaskID").Title("ID").Width(50);
                            columns.Bound("title").Editable(true).Sortable(true);
                            columns.Bound("start").Title("Start Time").Format("{0:MM/dd/yyyy}").Width(100).Editable(true).Sortable(true);
                            columns.Bound("end").Title("End Time").Format("{0:MM/dd/yyyy}").Width(100).Editable(true).Sortable(true);
                        })
                        .Views(views =>
                        {
                            views.DayView();
                            views.WeekView();
                            views.MonthView(monthView => monthView.Selected(true));
                        })
                        .Height(800)
                        .ShowWorkHours(false)
                        .ShowWorkDays(false)
                        .Snap(false)
                        .DataSource(ds => ds
                            .Read("Tasks", "Gantt")
                            .Create("CreateTask", "Gantt")
                            .Destroy("DestroyTask", "Gantt")
                            .Update("UpdateTask", "Gantt")
                            .Model(m =>
                            {
                                m.Id(f => f.TaskID);
                                m.ParentId(f => f.ParentID);
                                m.OrderId(f => f.OrderId);
                                m.Field(f => f.Expanded).DefaultValue(true);
                            })
                        )
                        .DependenciesDataSource(ds => ds
                            .Read(read => read
                            .Action("Dependencies", "Gantt")
                            )
                            .Model(m =>
                            {
                                m.Id(f => f.DependencyID);
                                m.PredecessorId(f => f.PredecessorID);
                                m.SuccessorId(f => f.SuccessorID);
                                m.Type(f => f.Type);
                            })
                        )
                    )
                </div>
            </div>
        </div>
    </section>
</aside>

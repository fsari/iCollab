@using System.Linq
@using System.Web
@using Core.Extensions
@using iCollab.ViewModels
@using Microsoft.AspNet.Identity
@using Model

@model iCollab.ViewModels.ProjectViewModel

@{
    ViewBag.Title = Model.Title;
}

<aside class="right-side">

    <section class="content-header">
        <h1 class="pull-left"><a href="/Projects">Projeler</a> <i class="fa fa-angle-double-right"></i> @Model.Title</h1>
        <div class="pull-right">
            @if (Model.CreatedBy == User.Identity.GetUserName())
            {
                <a href="/Projects/Edit/@Model.Id"><i class="glyphicon glyphicon-edit"></i></a>
                <a href="/Projects/Delete/@Model.Id" onclick="return confirm('Silmek istediğinize emin misiniz?');"><i class="glyphicon glyphicon-trash btn-lg"></i></a>
            }
            <a href="/Projects/Index"><i class="glyphicon glyphicon-list btn-lg"></i></a>
        </div>
        <div class="clearfix"></div>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-md-7">
                <div class="row">
                    <div class="col-md-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding" style="margin-left: 10px;">

                                <div class="pull-left">
                                    @{ Html.RenderAction("RenderUserDetails", "Users", new { username = Model.CreatedBy });}
                                </div>
                                <div class="pull-right">
                                    <strong>@Model.DateCreated.FormatDate()</strong>
                                </div>
                                <div class="clearfix"></div>
                                
                                <br />

                                <div class="progress">
                                    @if (Model.Status == ProjectStatus.Bitti)
                                    {
                                        <div class="progress-bar progress-bar-aqua" style="width: 100%"><span class="badge bg-navy">100%</span></div>
                                    }
                                    else
                                    {
                                        <div class="progress-bar progress-bar-aqua" style="width:  @Model.Progress()%"><span class="badge bg-navy">@Model.Progress()%</span></div>
                                    }
                                </div>

                                <br />

                                <div style="margin-right: 10px;">
                                    <div class="pull-left">
                                        <strong>Durumu : </strong>
                                        <a href="#" id="projectstatus" data-type="select" data-source="@Url.Action("GetProjectStatus")" data-value="@Model.Status" class="editable-click">@Model.Status</a>
                                        <br />

                                        <strong>Önceliği : </strong>
                                        <a href="#" id="projectpriority" data-type="select" data-source="@Url.Action("GetProjectPriority")" data-value="@Model.Priority" class="editable-click">@Model.Priority</a>
                                        <br />

                                        <strong>Kullanıcılar :</strong>
                                        @foreach (var user in Model.SelectedUsers)
                                        {
                                            <label class="label label-default">  @user </label>
                                        }

                                    </div>
                                    <div class="pull-right">

                                        @if (Model.StartDatetime.HasValue)
                                        {
                                            <strong>Başlangıç : </strong> @Html.DisplayFor(m => m.StartDatetime) <br />
                                        }

                                        @if (Model.EndDatetime.HasValue)
                                        {
                                            <strong>Bitiş : </strong> @Html.DisplayFor(m => m.EndDatetime) <br />
                                        }
                                    </div>

                                    <div class="clearfix"></div>
                                </div>
                                <br />
                                @Html.Raw(HttpUtility.HtmlDecode(Model.Description)) <br /> 

                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="box">
                            <div class="box-header">
                                <i class="fa fa-tasks"></i>
                                <h3 class="box-title">Görevler</h3>

                                <div class="pull-right box-tools">
                                    @Html.ActionLink("Görev Ekle", "AddTask", "Projects", new { projectId = Model.Id }, new { @class = "btn btn-danger btn-sm" })
                                </div>
                            </div>
                            <div class="box-body">
                                @{ Html.RenderPartial("_TaskTable", Model.Tasks.OrderByDescending(x => x.DateCreated)); }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="box">
                            <div class="box-header">
                                <i class="fa fa-book"></i>
                                <h3 class="box-title">Dökümanlar</h3>

                                <div class="pull-right box-tools">
                                    @Html.ActionLink("Döküman Ekle", "AddDocument", "Projects", new { projectId = Model.Id }, new { @class = "btn btn-danger btn-sm" })
                                </div>
                            </div>
                            <div class="box-body">
                                @{ Html.RenderPartial("_DocumentTable", Model.Documents.OrderByDescending(x => x.DateCreated)); }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-5">
                <div class="row">
                    <div class="col-md-12">
                        <div class="box">
                            <div class="box-body">
                                @{Html.RenderPartial("_Attachment", new AttachmentViewModel
                                  {
                                      Attachments = Model.Attachments,
                                      UploadPath = "/Projects/Upload/?id=" + Model.Id,
                                      RemovePath = "/Projects/RemoveAttachment/?projectId=" + Model.Id
                                  });}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="box">
                            <div class="box-header">
                                <i class="fa fa-book"></i>
                                <h3 class="box-title">Toplantılar</h3>
                                <div class="pull-right box-tools">
                                    @Html.ActionLink("Toplantı Ekle", "AddMeeting", "Projects", new { projectId = Model.Id }, new { @class = "btn btn-danger btn-sm" })
                                </div>
                            </div>
                            <div class="box-body">
                                @{ Html.RenderPartial("_MeetingTable", Model.Meetings.OrderByDescending(x => x.DateCreated)); }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </section>
</aside>
<script>
    $(document).ready(function () {
        //toggle `popup` / `inline` mode
        $.fn.editable.defaults.mode = 'inline';

        $('#projectstatus').editable({
            type: 'select',
            placement: 'right',
            value: 2,
            source: function () {
                var result;
                $.ajax({
                    url: '/Projects/GetProjectStatus',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        result = data;
                    }
                });
                return result;
            }
            , pk: '@Model.Id'
            , url: '/Projects/ChangeStatus'
            , success: function (response, newValue) {

            }
        });

        $('#projectpriority').editable({
            type: 'select',
            placement: 'right',
            value: 2,
            source: function () {
                var result;
                $.ajax({
                    url: '/Projects/GetProjectPriority',
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        result = data;
                    }
                });
                return result;
            }
            , pk: '@Model.Id'
            , url: '/Projects/ChangePriority'
            , success: function (response, newValue) {

            }
        });

    });

</script>
